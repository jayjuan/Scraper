Open in app
Notifications
Lists
Stories
Write
Follow
Jan 11, 2021
·
·





Save





import numpy as npimport matplotlib.pyplot as pltfrom skimage.io import imshow, imreadfrom skimage.color import rgb2hsv, hsv2rgbimport cv2
red_girl = imread('red_girl.PNG')plt.figure(num=None, figsize=(8, 6), dpi=80)imshow(red_girl);
red_filtered_girl = (red_girl[:,:,0] > 150)plt.figure(num=None, figsize=(8, 6), dpi=80)imshow(red_filtered_girl, cmap = 'gray');
red_girl_new = red_girl.copy()red_girl_new[:, :, 0] = red_girl_new[:, :, 0]*red_filtered_girlred_girl_new[:, :, 1] = red_girl_new[:, :, 1]*red_filtered_girlred_girl_new[:, :, 2] = red_girl_new[:, :, 2]*red_filtered_girlplt.figure(num=None, figsize=(8, 6), dpi=80)imshow(red_girl_new);
def rgb_splitter(image):    rgb_list = ['Reds','Greens','Blues']    fig, ax = plt.subplots(1, 3, figsize=(15,5), sharey = True)    for i in range(3):        ax[i].imshow(image[:,:,i], cmap = rgb_list[i])        ax[i].set_title(rgb_list[i], fontsize = 15)
rgb_splitter(red_girl)
red_filtered = (red_girl[:,:,0] > 150) & (red_girl[:,:,1] < 100) & (red_girl[:,:,2] < 110)plt.figure(num=None, figsize=(8, 6), dpi=80)red_girl_new = red_girl.copy()red_girl_new[:, :, 0] = red_girl_new[:, :, 0] * red_filteredred_girl_new[:, :, 1] = red_girl_new[:, :, 1] * red_filteredred_girl_new[:, :, 2] = red_girl_new[:, :, 2] * red_filteredimshow(red_girl_new);
def display_as_hsv(image):        img = cv2.imread(image)    img_hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)        hsv_list = ['Hue','Saturation','Value']    fig, ax = plt.subplots(1, 3, figsize=(15,7), sharey = True)        ax[0].imshow(img_hsv[:,:,0], cmap = 'hsv')    ax[0].set_title(hsv_list[0], fontsize = 20)    ax[0].axis('off')            ax[1].imshow(img_hsv[:,:,1], cmap = 'Greys')    ax[1].set_title(hsv_list[1], fontsize = 20)    ax[1].axis('off')            ax[2].imshow(img_hsv[:,:,2], cmap = 'gray')    ax[2].set_title(hsv_list[2], fontsize = 20)    ax[2].axis('off')            fig.tight_layout()
display_as_hsv('red_girl.PNG')
plt.figure(num=None, figsize=(8, 6), dpi=80)plt.imshow(red_girl_hsv[:,:,0], cmap='hsv')plt.colorbar();
lower_mask = red_girl_hsv [:,:,0] > 0.90upper_mask = red_girl_hsv [:,:,0] < 1.00mask = upper_mask*lower_mask
red = red_girl[:,:,0]*maskgreen = red_girl[:,:,1]*maskblue = red_girl[:,:,2]*maskred_girl_masked = np.dstack((red,green,blue))plt.figure(num=None, figsize=(8, 6), dpi=80)imshow(red_girl_masked);
lower_mask = red_girl_hsv [:,:,0] > 0.90upper_mask = red_girl_hsv [:,:,0] < 1.00saturation = red_girl_hsv [:,:,1] > 0.50
mask = upper_mask*lower_mask*saturation
red = red_girl[:,:,0]*maskgreen = red_girl[:,:,1]*maskblue = red_girl[:,:,2]*maskred_girl_masked = np.dstack((red,green,blue))plt.figure(num=None, figsize=(8, 6), dpi=80)imshow(red_girl_masked);
def color_isolates(image):        image_hsv = rgb2hsv(image[:,:,:-1])    titles = ['Mask 1','Mask 2','Mask 3']    f_size = 22        #Sky Filter    lower_mask_1 = image_hsv [:,:,0] > 0.45    upper_mask_1 = image_hsv [:,:,0] < 0.75    saturation_1 = image_hsv [:,:,1] > 0.15    mask_1= lower_mask_1*upper_mask_1*saturation_1        #Red Filter    lower_mask_2 = image_hsv [:,:,0] > 0.90    upper_mask_2 = image_hsv [:,:,0] < 1.00    saturation_2 = image_hsv [:,:,1] > 0.50    mask_2= lower_mask_2*upper_mask_2*saturation_2            #Earth Fikter    lower_mask_3 = image_hsv [:,:,0] > 0.05    upper_mask_3 = image_hsv [:,:,0] < 0.15    saturation_3 = image_hsv [:,:,1] < 0.75    value_3 = image_hsv [:,:,2] < 0.70    mask_3= lower_mask_3*upper_mask_3*saturation_3*value_3
    sky_filtered = np.dstack((image[:,:,0]*mask_1,                              image[:,:,1]*mask_1,                              image[:,:,2]*mask_1))        red_filtered = np.dstack((image[:,:,0]*mask_2,                              image[:,:,1]*mask_2,                              image[:,:,2]*mask_2))            earth_filtered = np.dstack((image[:,:,0]*mask_3,                                image[:,:,1]*mask_3,                                image[:,:,2]*mask_3))        images = [sky_filtered,red_filtered,earth_filtered]        fig, ax = plt.subplots(1, 3, figsize=(15,12))    for n, ax in enumerate(ax.flatten()):        ax.set_title(f'{titles[n]}', fontsize = f_size)        ax.imshow(images[n])        ax.set_axis_off()        fig.tight_layout()        color_isolates(red_girl)


2
56


56

2

Follow
Get started

170 Followers
Follow

